name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: onyx-silo-459007-n1
  GKE_CLUSTER: advertising-cluster
  GKE_ZONE: europe-west1-b
  REGISTRY: europe-west1-docker.pkg.dev
  REPOSITORY: advertising-repo

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Setup Node.js for testing
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    # Install dependencies and test backend
    - name: Install Backend Dependencies
      run: cd backend && npm install
    
    # Install dependencies and test frontend
    - name: Install Frontend Dependencies
      run: cd frontend && npm install

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Configure Docker to use gcloud as a credential helper
    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker ${{ env.REGISTRY }}

    # Build the Docker images
    - name: Build Frontend
      run: |-
        docker build           --tag "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest"           --tag "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }}"           ./frontend

    - name: Build Backend
      run: |-
        docker build           --tag "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest"           --tag "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:${{ github.sha }}"           ./backend

    # Push the Docker images to Google Artifact Registry
    - name: Push Docker images
      run: |-
        docker push "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest"
        docker push "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }}"
        docker push "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest"
        docker push "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:${{ github.sha }}"

    # Get GKE credentials
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GCP_SA_KEY }}

    # Deploy the application to GKE
    - name: Deploy
      run: |-
        kubectl apply -f kubernetes-modified/secrets.yaml
        kubectl apply -f kubernetes-modified/backend-deployment.yaml
        kubectl apply -f kubernetes-modified/frontend-deployment.yaml
        kubectl rollout restart deployment/backend deployment/frontend
